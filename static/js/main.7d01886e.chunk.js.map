{"version":3,"sources":["component/Body/BodyContainer/BodyContainer.module.css","component/UploadForm/UploadForm.module.css","assets/garbage.png","component/Body/BodyContainer/BodyItem/BodyItem.module.css","serviceWorker.js","store/galeryReducer.js","store/reduxStore.js","assets/validator.js","component/Header/Header.jsx","component/Footer/Footer.jsx","component/Body/BodyContainer/BodyItem/ChangeComment.jsx","component/Body/BodyContainer/BodyItem/ChangeCommentContainer.jsx","component/Body/BodyContainer/BodyItem/BodyItem.jsx","component/Body/BodyContainer/BodyContainer.jsx","component/Body/BodyContainer/BodyContainerWrap.jsx","component/Body/Body.jsx","assets/Forms/FormsControl.js","component/UploadForm/Form.jsx","component/UploadForm/UploadForm.jsx","component/Item/Item.jsx","component/Item/ItemContainer.jsx","App.js","index.js","assets/Forms/FormsControl.module.css","component/Header/Header.module.css","component/Footer/Footer.module.css","component/Body/Body.module.css","component/Item/item.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","ADD_POST","initialState","image","id","comment","src","idNumber","showImage","undefined","galleryReducer","state","action","type","Number","filter","i","map","p","reducers","combineReducers","gallery","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","minLength","Header","props","className","s","header","title","Footer","footer","ChangeComment","useState","setComment","texarea","value","onChange","e","text","target","onBlur","editComment","setEditMode","connect","BodyItem","editMode","container","to","onClick","img","alt","ChangeCommentContainer","onDoubleClick","buttonContainer","button","deleteButton","deletePost","BodyContainer","images","key","Body","body","BodyContainerWrap","Element","input","meta","hasError","touched","error","formControl","errorContainer","Textarea","Input","required","minLength2","length","UploadReduxForm","reduxForm","handleSubmit","onSubmit","item","label","Field","component","validate","name","placeholder","textarea","addPost","showForm","setShowForm","uploadContainer","formData","dispatch","reset","Item","tagName","document","href","withRouter","App","path","render","ItemContainer","GalleryApp","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.7d01886e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BodyContainer_container__1He3P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"uploadContainer\":\"UploadForm_uploadContainer__114H0\",\"input\":\"UploadForm_input__Nvlbj\",\"textarea\":\"UploadForm_textarea__2IFE7\",\"label\":\"UploadForm_label__2M1j7\",\"form\":\"UploadForm_form__Pp6aY\",\"item\":\"UploadForm_item__AQjU8\",\"title\":\"UploadForm_title__2aOL3\",\"button\":\"UploadForm_button__3gLZR\"};","module.exports = __webpack_public_path__ + \"static/media/garbage.e5a81464.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BodyItem_container__3g-oa\",\"title\":\"BodyItem_title__3jc6h\",\"img\":\"BodyItem_img__1Kn30\",\"texarea\":\"BodyItem_texarea__L9uh4\",\"button\":\"BodyItem_button__1YIuX\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const ADD_POST = 'gallery/ADD-POST'\r\nconst DELETE_POST = 'gallery/DELETE_POST'\r\nconst EDIT_COMMENT = 'gallery/EDIT_COMMENT'\r\nconst SHOW_IMAGE = 'gallery/SHOW_IMAGE'\r\n\r\nlet initialState = {\r\n  image: [\r\n    {\r\n      id: 0,\r\n      comment: 'Hello, this my first post',\r\n      src: 'https://images.unsplash.com/photo-1494253109108-2e30c049369b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80',\r\n    },\r\n  ],\r\n  idNumber: 1,\r\n  showImage: undefined,\r\n}\r\n\r\n\r\nconst galleryReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n      return {\r\n        ...state,\r\n        idNumber: Number(state.idNumber + 1),\r\n        image: [...state.image, {id: state.idNumber, comment: action.comment, src: action.src}],\r\n      }\r\n    }\r\n    case DELETE_POST: {\r\n      return {\r\n        ...state,\r\n        image: state.image.filter(i => i.id !== action.id),\r\n      }\r\n    }\r\n    case EDIT_COMMENT: {\r\n      return {\r\n        ...state,\r\n        image: state.image.map(i => {\r\n          if (action.id === i.id) {\r\n            return {...i, comment: action.comment}\r\n          }\r\n          return i\r\n        }),\r\n      }\r\n    }\r\n    case SHOW_IMAGE: {\r\n\r\n      return {\r\n        ...state,\r\n        showImage: state.image.filter(p=> p.id===action.id),\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const addPost = (src, comment) => ({type: ADD_POST, src, comment})\r\nexport const deletePost = (id) => ({type: DELETE_POST, id})\r\nexport const editComment = (id, comment) => ({type: EDIT_COMMENT, id, comment})\r\nexport const showImage = (id) => ({type: SHOW_IMAGE, id})\r\n\r\n\r\nexport default galleryReducer\r\n","import {combineReducers, compose, createStore} from 'redux'\r\nimport galleryReducer from './galeryReducer'\r\n\r\nimport {reducer as formReducer} from 'redux-form'\r\n\r\nlet reducers = combineReducers({\r\n  gallery: galleryReducer,\r\n  form: formReducer,\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(reducers, composeEnhancers())\r\nwindow.store = store\r\n\r\nexport default store\r\n","export const required = value => {\r\n  if (value) return undefined\r\n  return 'Field is required'\r\n}\r\n\r\n\r\nexport const minLengthCreator = minLength => value => {\r\n  if (value && value.length < minLength) return `Min length is ${minLength} symbol`\r\n\r\n  return undefined\r\n\r\n}\r\n","import React from 'react'\nimport s from './Header.module.css'\n\nconst Header = (props) => {\n  return <div className={s.header}>\n    <h2 className={s.title}> Tastaur's Gallery</h2>\n  </div>\n}\n\nexport default Header\n","import React from 'react'\nimport s from './Footer.module.css'\n\nconst Footer = (props) =>{\n  return  <div className={s.footer}>\n    <h4 className={s.title}> From Tastaur with love \t&copy;</h4>\n  </div>\n}\n\nexport default Footer\n","import React, {useState} from 'react'\nimport s from './BodyItem.module.css'\n\nconst ChangeComment = (props) => {\n  const [comment, setComment] = useState(props.comment)\n  const changeComment = (e) => {\n    let text = e.target.value\n    setComment(text)\n  }\n  const saveComment = () => {\n    props.editComment(props.id, comment)\n    props.setEditMode(false)\n  }\n  return <div>\n    <textarea className={s.texarea} value={comment} onChange={changeComment} onBlur={saveComment}/>\n  </div>\n}\nexport default ChangeComment\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport ChangeComment from './ChangeComment'\nimport {editComment} from '../../../../store/galeryReducer'\n\nlet mapStateToProps = (state) => {\n  return {}\n}\n\nexport default connect(mapStateToProps, {editComment})(ChangeComment)\n","import React, {useState} from 'react'\nimport s from './BodyItem.module.css'\nimport ChangeCommentContainer from './ChangeCommentContainer'\nimport {NavLink} from 'react-router-dom'\nimport deleteButton from '../../../../assets/garbage.png'\n\nconst BodyItem = (props) => {\n  const [editMode, setEditMode] = useState(false)\n  const setImage = () => {\n    props.showImage(props.id)\n  }\n  const deleteImage = () => {\n    props.deletePost(props.id)\n  }\n  return <div className={s.container}>\n    <NavLink to={`/id${props.id}`}>\n      <img onClick={setImage} src={props.src} className={s.img} alt='\nif you see this message, then something went wrong'\n      /></NavLink>\n\n    {editMode ?\n        <ChangeCommentContainer comment={props.comment} setEditMode={setEditMode} id={props.id}/>\n        : <p className={s.title} onDoubleClick={() => {setEditMode(true)}}>{props.comment}</p>\n    }\n    <div className={s.buttonContainer}>\n      <img className={s.button} src={deleteButton} onClick={deleteImage}/>\n    </div>\n  </div>\n}\n\nexport default BodyItem\n","import React from 'react'\nimport s from './BodyContainer.module.css'\nimport BodyItem from './BodyItem/BodyItem'\n\nconst BodyContainer = (props) => {\n\n  let images = props.gallery.image.map(i => <BodyItem deletePost={props.deletePost}\n                                                      showImage={props.showImage}\n                                                      key={i.id}\n                                                      id={i.id}\n                                                      comment={i.comment}\n                                                      src={i.src}\n  />)\n  return <div className={s.container}>\n    {images}\n  </div>\n}\n\nexport default BodyContainer\n","import React from 'react'\nimport BodyContainer from './BodyContainer'\nimport {connect} from 'react-redux'\nimport {deletePost, showImage} from '../../../store/galeryReducer'\n\n\nlet mapStateToProps = (state) => {\n  return {\n    gallery: state.gallery,\n  }\n}\n\nexport default connect(mapStateToProps, {showImage, deletePost})(BodyContainer)\n","import React from 'react'\nimport s from './Body.module.css'\nimport BodyContainerWrap from './BodyContainer/BodyContainerWrap'\n\nconst Body = (props) => {\n  return <div className={s.body}>\n    <h3 className={s.title}> App with perfect image</h3>\n    <BodyContainerWrap/>\n  </div>\n}\n\nexport default Body\n","import React from 'react'\r\nimport s from './FormsControl.module.css'\r\n\r\n\r\nconst Element = Element => ({input, meta, ...props}) => {\r\n  const hasError = meta.touched && meta.error\r\n  return (\r\n      <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n        <Element {...input} {...props} />\r\n        <div className={s.errorContainer}>\r\n          {hasError && <span> {meta.error} </span>}\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\nexport const Textarea = Element('textarea')\r\n\r\nexport const Input = Element('input')\r\n\r\n\r\n","import React from 'react'\nimport s from './UploadForm.module.css'\nimport {Field, reduxForm} from 'redux-form'\nimport {Input, Textarea} from '../../assets/Forms/FormsControl'\n//form\nimport {minLengthCreator, required} from '../../assets/validator'\n\nconst minLength2 = minLengthCreator(2)\n\nconst Form = ({handleSubmit}) => {\n  return <form onSubmit={handleSubmit} className={s.form}>\n    <div className={s.item}>\n      <label className={s.label}> Enter url picture</label>\n      <Field className={s.input}\n             component={Input}\n             type={`text`}\n             validate={required}\n             name={'src'}\n             placeholder={`Src`}\n      />\n    </div>\n    <div className={s.item}>\n      <label className={s.label}> Enter your comment</label>\n      <Field component={Textarea}\n             validate={[required, minLength2]}\n             name={'comment'}\n             placeholder={`Comment`}\n             className={s.textarea}\n             type={`text`}\n      />\n    </div>\n    <button type='submit' className={s.button}>Upload</button>\n  </form>\n}\nconst UploadReduxForm = reduxForm({\n  form: 'formUpload',\n})(Form)\n// add redux-form\nexport default UploadReduxForm\n","import React, {useState} from 'react'\nimport s from './UploadForm.module.css'\nimport {addPost} from '../../store/galeryReducer'\nimport {connect} from 'react-redux'\nimport UploadReduxForm from './Form'\nimport {reset} from 'redux-form'\n\n\n//connect to store\nconst UploadForm = (props) => {\n  const addPhoto = (formData, dispatch) => {\n    props.addPost(formData.src, formData.comment)\n    dispatch(reset('formUpload'))\n  }\n  const [showForm, setShowForm] = useState(false)\n  return <div className={s.uploadContainer}>\n    <h2 className={s.title}>You can download new picture</h2>\n    {showForm ?\n        <UploadReduxForm onSubmit={addPhoto}/>\n        : <button className={s.button} onClick={() => setShowForm(true)}>Download new picture</button>}\n  </div>\n}\nconst mapStateToProps = (state) => ({\n  state,\n})\n\nexport default connect(mapStateToProps, {addPost})(UploadForm)\n","import React from 'react'\nimport {Redirect} from 'react-router-dom'\nimport s from './item.module.css'\n\nconst Item = (props) => {\n  let closeImg = (e) => {\n    if (e.target.tagName != 'IMG') {\n      document.location.href = '/#/'\n    }\n  }\n\n  return <div onClick={closeImg}>\n    {props.gallery.showImage ?\n        <div className={s.container}>\n          <img src={props.gallery.showImage[0].src} className={s.img} alt=''/>\n        </div>\n        : <Redirect to={`/`}/>\n    }\n  </div>\n}\nexport default Item\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport {compose} from 'redux'\nimport {withRouter} from 'react-router-dom'\nimport Item from './Item'\n\nlet mapStateToProps = (state) => ({\n  gallery: state.gallery,\n})\n\n\nexport default compose(\n    connect(mapStateToProps, {}),\n    withRouter,\n)(Item)\n","import React from 'react'\nimport './App.css'\nimport {Provider} from 'react-redux'\nimport store from './store/reduxStore'\nimport {HashRouter, Route} from 'react-router-dom'\nimport Header from './component/Header/Header'\nimport Footer from './component/Footer/Footer'\nimport Body from './component/Body/Body'\nimport UploadForm from './component/UploadForm/UploadForm'\nimport ItemContainer from './component/Item/ItemContainer'\n\nconst App = (props) => {\n  return (\n      <div className=\"App\">\n        <div className='wrapper'>\n          <Header/>\n          <Body/>\n          <UploadForm/>\n          <Footer/>\n          <Route path={`/id:id?`} render={() => {\n            return <ItemContainer/>\n          }}\n          />\n        </div>\n      </div>\n  )\n}\n\nconst GalleryApp = (props) => {\n  return <HashRouter>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </HashRouter>\n}\n\nexport default GalleryApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\nimport GalleryApp from './App'\n\nReactDOM.render(\n    <GalleryApp/>,\n    document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormsControl_error__zC0ju\",\"formControl\":\"FormsControl_formControl__2aXFM\",\"errorContainer\":\"FormsControl_errorContainer__OhTDI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__UkIpa\",\"title\":\"Header_title__3CVSq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__13mzJ\",\"title\":\"Footer_title__1M8pG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Body_body___fZLh\",\"title\":\"Body_title__2Sl7v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"item_container__LkAnZ\",\"img\":\"item_img__33I1w\"};"],"sourceRoot":""}